#!/bin/bash
# shellcheck disable=SC2039
#
# Fetch remotes and and update a branch (master by default) from the upstream
# remote.

BRANCH="${1:-master}"
REMOTE_ORIGIN="${2:-origin}"

REMOTE_UPSTREAM="upstream"

check_remote_exists() {
    local remote="$1"
    if ! git remote | grep -q "^$remote"; then
        echo "Remote $remote not found"
        exit 1
    fi        
}

current_branch() {
    git rev-parse --abbrev-ref HEAD
}


if ! git status >/dev/null 2>&1; then
    echo "Not a git repo?"
    exit 1
fi

check_remote_exists "$REMOTE_ORIGIN"
check_remote_exists "$REMOTE_UPSTREAM"

echo "Updating $BRANCH on $REMOTE_ORIGIN from $REMOTE_UPSTREAM"

git fetch --tags "$REMOTE_UPSTREAM"

if [ "$(current_branch)" = "$BRANCH" ]; then
    git pull "$REMOTE_UPSTREAM" "$BRANCH"
else
    git branch -f "$BRANCH" "$REMOTE_UPSTREAM/$BRANCH"
fi

git push -u --tags "$REMOTE_ORIGIN" "$BRANCH"
